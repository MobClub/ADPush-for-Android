// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        jcenter()
        maven {
//            url "http://mvn.mob.com/android"
            url 'http://10.89.104.129:8080/job/iMaven/ws/android'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath 'com.mob.sdk:MobSDK:+'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
//            url "http://mvn.mob.com/android"
            url 'http://10.89.104.129:8080/job/iMaven/ws/android'
        }
    }
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

TaskExecutionGraph taskGraph = gradle.getTaskGraph()
taskGraph.afterTask { Task task ->

    if (task.name == "assembleRelease") {
        if (task.project.name == "AdPushSDK") {
            println("+++++++++"+task.project.name + "  " + task.name)
            copy {
                from "AdPushSDK/build/outputs/aar/AdPushSDK-release.aar"
                into "outputs/"
                rename {"MobAdPush-${project.hasProperty("version")?project.getProperty('version'):"1.0.0"}.aar" }
            }
            copy {
                from "AdPushSDK/build/outputs/mapping/"
                into "outputs/"
            }
        } else if(task.project.name == "AdPushSDKDemo" && task.name == "assembleRelease"){
            println("========"+task.project.name + "  " + task.name)
            copy {
                from "AdPushSDKDemo/build/outputs/apk/release/AdPushSDKDemo-release.apk"
                into "outputs/"
                rename {"MobAdPushDemo-${project.hasProperty("version")?project.getProperty('version'):"1.0.0"}.apk" }
            }
        }
    }
}

//apply from: 'git-hooks/install.gradle'
//gradle.projectsEvaluated {
//    def proc = './git-hooks/install.sh'.execute()
//    def os = new StringBuffer()
//    proc.waitForProcessOutput(os, System.err)
//    print(os.toString())
//    // 不成功，终止编译
//    if (!os.toString().contains("success")) {
//        throw new GradleException('occure error when insert commit message git hook，you can contact 大君')
//    }
//
//    proc = './git-hooks/install-style.sh'.execute()
//    os = new StringBuffer()
//    proc.waitForProcessOutput(os, System.err)
//    print(os.toString())
//    // 不成功，终止编译
//    if (!os.toString().contains("success")) {
//        throw new GradleException('occure error when insert check style git hook，you can contact 大君')
//    }
//}